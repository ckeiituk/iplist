import{_ as x,g as a,J as i,y as n,C as o,K as f,B as v,L as r,x as C,z as c,A as d,M as S,d as b,N as k,O as h,D as A}from"./DNMCk298.js";const w={name:"MaterialCard",inheritAttrs:!1,props:{color:{type:String,default:"secondary"},elevation:{type:[Number,String],default:10},inline:{type:Boolean,default:!1},fullWidth:{type:Boolean,default:!1},offset:{type:[Number,String],default:24},title:{type:String,default:void 0},text:{type:String,default:void 0}},computed:{hasOffset(){return this.$slots.header||this.$slots.offset||this.title||this.text},styles(){return this.hasOffset?{marginBottom:`${this.offset}px`,marginTop:`${this.offset*2}px`}:null}}},O={key:1,class:"px-3"},R=["textContent"],D=["textContent"];function B(e,s,t,p,u,l){const _=a("v-card"),P=a("helper-offset"),I=a("v-card-text"),y=a("v-divider"),g=a("v-card-actions");return n(),i(_,S({class:"v-card--material-card",style:l.styles},e.$attrs),{default:o(()=>[l.hasOffset?(n(),i(P,{key:0,inline:t.inline,"full-width":t.fullWidth,offset:t.offset},{default:o(()=>[e.$slots.offset?r(e.$slots,"offset",{key:1}):(n(),i(_,{key:0,color:t.color,elevation:t.elevation,class:"v-card--material__header d-flex align-center","min-height":"80"},{default:o(()=>[!t.title&&!t.text?r(e.$slots,"header",{key:0}):(n(),C("div",O,[c("h4",{class:"title font-weight-light mb-2",textContent:d(t.title)},null,8,R),c("p",{class:"category font-weight-thin mb-0",textContent:d(t.text)},null,8,D)]))]),_:3},8,["color","elevation"]))]),_:3},8,["inline","full-width","offset"])):f("",!0),v(I,{class:"cardText"},{default:o(()=>[r(e.$slots,"default")]),_:3}),e.$slots.actions?(n(),i(y,{key:1,class:"mx-3"})):f("",!0),e.$slots.actions?(n(),i(g,{key:2},{default:o(()=>[r(e.$slots,"actions")]),_:3})):f("",!0)]),_:3},16,["style"])}const N=x(w,[["render",B]]),T={class:"max-w-[960px] mx-auto"},M={class:"mb-4"},$=b({__name:"about",setup(e){const{t:s}=k({useScope:"local"});return(t,p)=>{const u=N,l=a("v-container");return n(),i(l,{fluid:""},{default:o(()=>[c("div",T,[c("h1",M,d(h(s)("title")),1),v(u,null,{default:o(()=>[A(d(h(s)("about")),1)]),_:1})])]),_:1})}}});function m(e){const s=e;s.__i18n=s.__i18n||[],s.__i18n.push({locale:"",resource:{en:{title:{t:0,b:{t:2,i:[{t:3}],s:"IP Address Collection and Management Service"}},about:{t:0,b:{t:2,i:[{t:3}],s:'This service is designed to collect and update IP addresses (IPv4 and IPv6), as well as their CIDR zones for specified domains. It is an asynchronous PHP web server based on AMPHP and uses the Linux utilities whois and ipcalc. The service provides interfaces to retrieve lists of IP address zones of specified domains (IPv4 addresses, IPv6 addresses, as well as CIDRv4 and CIDRv6 zones) in various formats, including plain text, JSON, and script formats for importing into "Address List" on routers such as MikroTik (RouterOS), Keenetic KVAS\\BAT, SwitchyOmega, Amnezia, and others.'}}},ru:{title:{t:0,b:{t:2,i:[{t:3}],s:"Сервис сбора IP-адресов и CIDR зон"}},about:{t:0,b:{t:2,i:[{t:3}],s:'Данный сервис предназначен для сбора и обновления IP-адресов (IPv4 и IPv6), а также их CIDR зон для указанных доменов. Это асинхронный PHP веб-сервер на основе AMPHP и Linux-утилит whois и ipcalc. Сервис предоставляет интерфейсы для получения списков зон ip адресов указанных доменов (IPv4 адресов, IPv6 адресов, а также CIDRv4 и CIDRv6 зон) в различных форматах, включая текстовый, JSON, форматы скриптов для добавления в "Address List" на роутерах Mikrotik (RouterOS), Keenetic KVAS\\BAT, SwitchyOmega, Amnezia и др.'}}},cn:{title:{t:0,b:{t:2,i:[{t:3}],s:"IP地址收集与管理服务"}},about:{t:0,b:{t:2,i:[{t:3}],s:"该服务用于收集和更新指定域名的 IP 地址（IPv4 和 IPv6）及其 CIDR 区段。它是一个基于 AMPHP 的异步 PHP Web 服务器，使用 Linux 工具 whois 和 ipcalc。该服务提供接口，以多种格式（包括纯文本、JSON，以及可用于 MikroTik（RouterOS）、Keenetic KVAS\\BAT、SwitchyOmega、Amnezia 等路由器的“地址列表”导入脚本）获取指定域名的 IP 地址区段（IPv4 地址、IPv6 地址、CIDRv4 和 CIDRv6 区段）列表。"}}}}})}typeof m=="function"&&m($);export{$ as default};
