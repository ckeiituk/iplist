name: Build MRS from iplist
on:
  schedule:
    - cron: "15 */6 * * *"   # каждые 6 часов (CRON выполняется по UTC)
  workflow_dispatch: {}       # кнопка “Run workflow” руками
  push:
    paths:
      - "config/**"
      - ".github/workflows/build-mrs.yml"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y php-cli composer curl jq dnsutils whois ipcalc golang-go

      - name: Install PHP deps
        run: composer install --no-interaction --prefer-dist

      - name: Install mihomo (for convert-ruleset)
        run: |
          echo "GOBIN=$HOME/go/bin" >> $GITHUB_ENV
          go install github.com/metacubex/mihomo@latest

      - name: Start iplist HTTP server
        run: |
          php index.php > server.log 2>&1 &
          echo $! > iplist.pid

      - name: Wait for iplist to become ready
        run: |
          for i in {1..60}; do
            if curl -sf "http://127.0.0.1:8080/?format=json" >/dev/null; then exit 0; fi
            sleep 1
          done
          echo "iplist service is not responding" >&2
          exit 1

      - name: Generate text lists
        run: |
          mkdir -p dist/mrs/domain dist/mrs/ipcidr

          # Собираем список сайтов (config/<group>/<site>.json) и групп (config/<group>/)
          mapfile -t SITES < <(find config -type f -name "*.json" -printf '%h %f\n' | awk '{gsub(/\.json$/,"",$2); print $1"/"$2}')
          mapfile -t GROUPS < <(find config -mindepth 1 -maxdepth 1 -type d -printf '%f\n')

          base="http://127.0.0.1:8080"
          fetch_domains() { curl -fsSL "$base/?format=text&data=domains&$1=$2"; }
          fetch_cidr() { { curl -fsSL "$base/?format=text&data=cidr4&$1=$2"; echo; curl -fsSL "$base/?format=text&data=cidr6&$1=$2"; } | sed '/^$/d'; }

          # По сайтам
          for path in "${SITES[@]}"; do
            group="$(basename "$(dirname "$path")")"
            site="$(basename "$path")"
            fetch_domains site "$site" > "dist/mrs/domain/${group}--${site}.txt" || true
            fetch_cidr    site "$site" > "dist/mrs/ipcidr/${group}--${site}.txt" || true
          done

          # По группам (агрегаты)
          for g in "${GROUPS[@]}"; do
            fetch_domains group "$g" > "dist/mrs/domain/${g}.txt" || true
            fetch_cidr    group "$g" > "dist/mrs/ipcidr/${g}.txt" || true
          done

      - name: Convert to .mrs
        run: |
          M="$HOME/go/bin/mihomo"
          shopt -s nullglob
          for f in dist/mrs/domain/*.txt; do
            "$M" convert-ruleset domain text "$f" "${f%.txt}.mrs"
          done
          for f in dist/mrs/ipcidr/*.txt; do
            "$M" convert-ruleset ipcidr text "$f" "${f%.txt}.mrs"
          done

      - name: Stop iplist
        if: always()
        run: |
          kill $(cat iplist.pid) || true

      - name: Commit artifacts
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add dist/mrs
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore(mrs): rebuild on $(date -u +%F:%T) UTC"
            git push
          fi
